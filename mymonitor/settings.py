"""
Django settings for mymonitor project.

Generated by 'django-admin startproject' using Django 5.2.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-4v)#jrebm-ljm5!m2riskwf@17oc=d_%nzqumk+c3lvpu1d5n0'

# SECURITY WARNING: don't run with debug turned on in production!
# 生产环境中应设置为False，开发环境中可以设置为True
DEBUG = False

ALLOWED_HOSTS = [
    "*",  # 允许所有主机访问，生产环境中应限制为特定域名或IP
    "localhost",
    "127.0.0.1",
]


# Application definition

INSTALLED_APPS = [
    'daphne',
    'monitor_app.apps.MonitorAppConfig',
    'django_apscheduler',
    # 'monitor_app',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mymonitor.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mymonitor.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.co件，我希望将里面的连接配置信m/en/5.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# 静态文件目录，供nginx等反向代理使用
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


VSPHERE_CONFIG = {
    "host": "yourhostname",
    "user": "yourusername",
    "pwd": "yourpassword"
}

PRINTER_CONFIG_1 = {
    "ip": "yourprinterip",
    "community": "public"
}

PRINTER_CONFIG_2 = {
    "ip": "yourprinterip",
    "community": "public"
}

# 邮件配置 (使用SMTP示例)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# 如果想使用真实SMTP，请确保以下设置正确：
EMAIL_HOST = 'your.smtp.server'  # 替换为实际SMTP服务器地址
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = 'example@domain.com'
EMAIL_HOST_PASSWORD = 'yourpassword'
DEFAULT_FROM_EMAIL = 'example@domain.com'

# 收件人列表
ALERT_RECIPIENTS = ['example1@domain.com', 'example2@domain.com']

# 定时任务设置
SCHEDULER_AUTOSTART = True

# 日志配置
LOGGING = {
    'version': 1,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
        },
    },
    'loggers': {
        'monitor_app': {
            'handlers': ['console'],
            'level': 'INFO',
        },
    },
}

# ASGI部署配置
ASGI_APPLICATION = "mymonitor.asgi.application"